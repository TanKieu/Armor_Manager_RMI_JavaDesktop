/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client;

import armor_mng.ArmorDTO;
import armor_mng.ArmorInterface;
import armor_mng.ArmorServer;
import java.rmi.Naming;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author winnh
 */
public class ArmorClient extends javax.swing.JFrame {

    Date dateCreate;
    String serviceName = "rmi://localhost:1123/ArmorInterface";
    ArmorInterface stub = null;
    ArmorServer service = null;
    boolean addnew = false;
    Vector header = new Vector();
    Vector data = new Vector();
    List<ArmorDTO> list = new ArrayList();

    /**
     * Creates new form ArmorClient
     */
    public ArmorClient() {
        initComponents();
        header.add("Id");
        header.add("Classification");
        header.add("Description");
        header.add("Status");
        header.add("Time create");
        header.add("Defense");

        try {
            stub = (ArmorInterface) Naming.lookup(serviceName);
            if (stub != null) {
                service = new ArmorServer();
                list = service.findAllArmor();
            } else {
                JOptionPane.showMessageDialog(this, "Not find Server!!!");
                return;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        loadData();
        DefaultTableModel m = (DefaultTableModel) (table.getModel());
        m.setDataVector(data, header);
    }

    void loadData() {
        try {
            for (ArmorDTO dto : service.findAllArmor()) {
                Vector row = new Vector();
                row.add(dto.getArmorID());
                row.add(dto.getClassification());
                row.add(dto.getDescription());
                row.add(dto.getStatus());
                row.add(dto.getTimeOfCreate());
                row.add(dto.getDefense());
                data.add(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtArmorID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtClass = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTOC = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDefense = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        atxt = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnfindByID = new javax.swing.JButton();
        btnGetall = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Armor Client");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setText("Armor Client");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Armor's Detail"));

        jLabel2.setText("Armor ID");

        jLabel3.setText("Classification");

        jLabel4.setText("TimeOfCreate");

        txtTOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTOCActionPerformed(evt);
            }
        });

        jLabel5.setText("Defense");

        jLabel6.setText("Description");

        atxt.setColumns(20);
        atxt.setRows(5);
        jScrollPane2.setViewportView(atxt);

        jLabel7.setText("Status");

        btnCreate.setText("Create");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnfindByID.setText("Find By Armor ID");
        btnfindByID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnfindByIDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCreate)
                        .addGap(56, 56, 56)
                        .addComponent(btnUpdate))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtArmorID)
                            .addComponent(txtClass)
                            .addComponent(txtTOC)
                            .addComponent(txtDefense)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(txtStatus))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemove)
                        .addGap(90, 90, 90))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnfindByID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtArmorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnfindByID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtClass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtDefense, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate)
                    .addComponent(btnUpdate)
                    .addComponent(btnRemove))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        btnGetall.setText("Get all");
        btnGetall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetallActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(303, 303, 303)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(btnGetall)))
                .addGap(38, 38, 38)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnGetall))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTOCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTOCActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        addnew = true;
        txtArmorID.setEditable(addnew);
        txtArmorID.requestFocus();
        txtArmorID.setText("");
        txtClass.setText("");
        txtStatus.setText("");
        atxt.setText("");
        txtDefense.setText("");
        txtStatus.setText("");
        Date date = new Date();
        dateCreate = date;
        txtTOC.setText(date.toString());
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String reg = "[a-zA-Z_0-9]+";
        String Id = txtArmorID.getText().trim();
        if (Id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Id is not null");
            return;
        }
        String classes = txtClass.getText().trim();
        if (classes.length() > 30) {
            JOptionPane.showMessageDialog(this, "Classification has max length 30");
            return;
        }
        String status = txtStatus.getText().trim();
        String Descrip = atxt.getText().trim();
        String descrip=Descrip.replaceAll("\\n", " ");
        if (Descrip.length() > 300) {
            JOptionPane.showMessageDialog(this, "Description has max length 300");
            return;
        }
        String defenseStr = txtDefense.getText().trim();
        if (!defenseStr.matches("[0-9]+")) {
            JOptionPane.showMessageDialog(this, "defense is a positive number");
            return;
        }
        int defense = Integer.parseInt(txtDefense.getText().trim());
        if (defense <= 0) {
            JOptionPane.showMessageDialog(this, "defense >0");
            return;
        }
        String date = txtTOC.getText();
        ArmorDTO dto = new ArmorDTO(Id, classes, descrip, status, date, defense);
        if (addnew) {
            if (service.findByArmorID(Id) != null) {
                JOptionPane.showMessageDialog(this, "Id is dupplicated");
                return;
            }
            if (!Id.matches(reg)) {
                JOptionPane.showMessageDialog(this, "Id doesn't contain special characters");
                return;
            }
            if (Id.length() > 10) {
                JOptionPane.showMessageDialog(this, "ID has max length is 10");
                return;
            }
            if (service.createArmor(dto) == true) {
                Vector row = new Vector();
                row.add(Id);
                row.add(classes);
                row.add(Descrip);
                row.add(status);
                row.add(dateCreate.toString());
                row.add(defense);

                data.add(row);
                table.updateUI();
            }
        } else {
            if (service.updateArmor(dto)) {
                int selectedRow = table.getSelectedRow();
                Vector row = (Vector) data.get(selectedRow);
                row.set(1, dto.getClassification());
                row.set(2, dto.getDescription());
                row.set(3, dto.getStatus());
                row.set(4, dto.getTimeOfCreate());
                row.set(5, dto.getDefense());
                table.updateUI();
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        addnew = false;
        txtArmorID.setEditable(addnew);
        int selecctedRow = table.getSelectedRow();
        String id = table.getValueAt(selecctedRow, 0).toString();
        String classes = table.getValueAt(selecctedRow, 1).toString();
        String descrip = table.getValueAt(selecctedRow, 2).toString();
        String status = table.getValueAt(selecctedRow, 3).toString();
        String date = table.getValueAt(selecctedRow, 4).toString();
        String defense = table.getValueAt(selecctedRow, 5).toString();
        txtArmorID.setText(id);
        txtClass.setText(classes);
        atxt.setText(descrip);
        txtStatus.setText(status);
        txtTOC.setText(date);
        txtDefense.setText(defense);
    }//GEN-LAST:event_tableMouseClicked

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int r= JOptionPane.showConfirmDialog(this , "Are you sure?","Remove?", JOptionPane.YES_NO_OPTION);
        if(r==JOptionPane.YES_OPTION){
            try{
                int selectedRow=table.getSelectedRow();
                String id= table.getValueAt(selectedRow, 0).toString();
                if(service.removeArmor(id)){
                     data.remove(selectedRow);
                }
            }catch(Exception e){
                e.printStackTrace();
            }
            table.updateUI();
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnfindByIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnfindByIDActionPerformed
        String Id= txtArmorID.getText().trim();
        ArmorDTO dto = service.findByArmorID(Id);
        txtClass.setText("");
        txtDefense.setText("");
        txtTOC.setText("");
        txtStatus.setText("");
        atxt.setText("");
        if(dto!=null){
                Vector row = new Vector();
                row.add(dto.getArmorID());
                row.add(dto.getClassification());
                row.add(dto.getDescription());
                row.add(dto.getStatus());
                row.add(dto.getTimeOfCreate());
                row.add(dto.getDefense());
                data.clear();
                data.add(row);
                table.updateUI();
        }else{
            JOptionPane.showMessageDialog(this, "Not Found!!!");
        }
    }//GEN-LAST:event_btnfindByIDActionPerformed

    private void btnGetallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetallActionPerformed
         data.clear();
         loadData();
         table.updateUI();
    }//GEN-LAST:event_btnGetallActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ArmorClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ArmorClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ArmorClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ArmorClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ArmorClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea atxt;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnGetall;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnfindByID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtArmorID;
    private javax.swing.JTextField txtClass;
    private javax.swing.JTextField txtDefense;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtTOC;
    // End of variables declaration//GEN-END:variables
}
